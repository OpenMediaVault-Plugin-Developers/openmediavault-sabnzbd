#!/bin/sh

set -e

CONFIG="/var/opt/sabnzbd/sabnzbd.ini"

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

update() {
service sabnzbd stop

if [ -f "/etc/init.d/sabnzbd2" ]; then
    /etc/init.d/sabnzbd2 stop
fi


beta="$(omv_config_get "/config/services/sabnzbd/beta")"

if [ "${beta}" = "1" ]; then
    ver1=`curl -s -L https://github.com/sabnzbd/sabnzbd/releases | grep -m1 '\-src.tar.gz' | sed 's#.*SABnzbd-\(.*\)-.*#\1#'`
    if [ ${#ver1} -gt 10 ]; then
        ver1=`curl -s -L https://github.com/sabnzbd/sabnzbd/releases | grep -m1 SABnzbd- | sed 's#.*SABnzbd-\(.*\)-.*#\1#'`
    fi
else
    ver1=`curl -s -L https://github.com/sabnzbd/sabnzbd/releases/latest | grep -m1 '\-src.tar.gz' | sed 's#.*SABnzbd-\(.*\)-.*#\1#'`
    if [ ${#ver1} -gt 10 ]; then
        ver1=`curl -s -L https://github.com/sabnzbd/sabnzbd/releases/latest | grep -m1 SABnzbd- | sed 's#.*SABnzbd-\(.*\)-.*#\1#'`
    fi
fi

if [ "$ver1" = "" ]; then
    exit
fi

wget -q -nv https://github.com/sabnzbd/sabnzbd/releases/download/${ver1}/SABnzbd-${ver1}-src.tar.gz -O /tmp/sabnzbdplus.tar.gz > /dev/null 2>&1
tar xzf /tmp/sabnzbdplus.tar.gz -C /tmp/
cp -fRa /tmp/SABnzbd-${ver1}/. /opt/SABnzbd/
rm -fR /tmp/sabnzbdplus.tar.gz
rm -fR /tmp/SABnzbd-${ver1}
chown sabnzbd:users /opt/SABnzbd -R
chmod 775 /opt/SABnzbd -R
}

getsettings() {
beta="$(omv_config_get "//services/sabnzbd/beta")"

if [ "${beta}" = "1" ]; then
    ver1=`curl -s -L https://github.com/sabnzbd/sabnzbd/releases | grep -m1 '\-src.tar.gz' | sed 's#.*SABnzbd-\(.*\)-.*#\1#'`
    if [ ${#ver1} -gt 10 ]; then
        ver1=`curl -s -L https://github.com/sabnzbd/sabnzbd/releases | grep -m1 SABnzbd- | sed 's#.*SABnzbd-\(.*\)-.*#\1#'`
    fi
else
    ver1=`curl -s -L https://github.com/sabnzbd/sabnzbd/releases/latest | grep -m1 '\-src.tar.gz' | sed 's#.*SABnzbd-\(.*\)-.*#\1#'`
    if [ ${#ver1} -gt 10 ]; then
        ver1=`curl -s -L https://github.com/sabnzbd/sabnzbd/releases/latest | grep -m1 SABnzbd- | sed 's#.*SABnzbd-\(.*\)-.*#\1#'`
    fi
fi

ver2=`cat /opt/SABnzbd/sabnzbd/version.py | grep '__version__ = ' | sed 's/__version__ = "\(.*\)"/\1/g'`

#ver2=0.7.00 #use to test if button shows if values do not match
if [ "$ver1" = "$ver2" ]; then
    xmlstarlet ed -L -u "//services/sabnzbd/update" -v 0 -n $OMV_CONFIG_FILE
else
    xmlstarlet ed -L -u "//services/sabnzbd/update" -v 1 -n $OMV_CONFIG_FILE
fi

if [ -f "$CONFIG" ]; then
    PORT=`grep -m 1 ^port $CONFIG | cut -d ' ' -f 3`
    HTTPS=`grep -m 1 ^enable_https "${CONFIG}" | cut -d ' ' -f 3`
    if [ "$HTTPS" = "1" ]; then
        HTTPSPORT=`grep ^https_port $CONFIG | cut -d ' ' -f 3`
        DAEMON_OPTS="--daemon --pidfile $PID_FILE --https $HTTPSPORT"
    fi
else
    PORT="8080"
fi

xmlstarlet ed -L -u "//services/sabnzbd/port" -v $PORT -n $OMV_CONFIG_FILE
}

setsettings() {
if [ -f "/etc/init.d/sabnzbd2" ]; then
    /etc/init.d/sabnzbd2 stop
fi

OMV_SABNZBD1_DATA_PATH=${DATA1-/var/opt/sabnzbd}
OMV_SABNZBD1_DATA_CONFIG="${OMV_SABNZBD1_DATA_PATH}/sabnzbd.ini"
OMV_SABNZBD2_DATA_PATH=${DATA2-/var/opt/sabnzbd2}
OMV_SABNZBD2_DATA_CONFIG="${OMV_SABNZBD2_DATA_PATH}/sabnzbd.ini"
OMV_SABNZBD_USER=${USER-sabnzbd}
OMV_SABNZBD_GROUP=${GROUP-users}
OMV_SABNZBD_XPATH="//services/sabnzbd"

newinstance="$(omv_config_get "//services/sabnzbd/newinstance")"
newinstenable="$(omv_config_get "//services/sabnzbd/newinstenable")"
ppass="$(omv_config_get "//services/sabnzbd/ppass")"
ssl="$(omv_config_get "//services/sabnzbd/ssl")"
beta="$(omv_config_get "//services/sabnzbd/beta")"

if [ "${beta}" = "1" ]; then
    ver1=`curl -s -L https://github.com/sabnzbd/sabnzbd/releases | grep -m1 '\-src.tar.gz' | sed 's#.*SABnzbd-\(.*\)-.*#\1#'`
    if [ ${#ver1} -gt 10 ]; then
        ver1=`curl -s -L https://github.com/sabnzbd/sabnzbd/releases | grep -m1 SABnzbd- | sed 's#.*SABnzbd-\(.*\)-.*#\1#'`
    fi
else
    ver1=`curl -s -L https://github.com/sabnzbd/sabnzbd/releases/latest | grep -m1 '\-src.tar.gz' | sed 's#.*SABnzbd-\(.*\)-.*#\1#'`
    if [ ${#ver1} -gt 10 ]; then
        ver1=`curl -s -L https://github.com/sabnzbd/sabnzbd/releases/latest | grep -m1 SABnzbd- | sed 's#.*SABnzbd-\(.*\)-.*#\1#'`
    fi
fi

ver2=`cat /opt/SABnzbd/sabnzbd/version.py | grep '__version__ = ' | sed 's/__version__ = "\(.*\)"/\1/g'`

if [ "$ver1" = "$ver2" ]; then
    xmlstarlet ed -L -u "//services/sabnzbd/update" -v 0 -n $OMV_CONFIG_FILE
else
    xmlstarlet ed -L -u "//services/sabnzbd/update" -v 1 -n $OMV_CONFIG_FILE
fi

if [ ! -d $OMV_SABNZBD1_DATA_PATH ]; then
    mkdir -p $OMV_SABNZBD1_DATA_PATH
    chown $OMV_SABNZBD_USER:$OMV_SABNZBD_GROUP $OMV_SABNZBD1_DATA_PATH
fi

if [ ! -f $OMV_SABNZBD1_DATA_CONFIG ]; then
    echo '__version__ = 19
[misc]
https_port = 9080
https_cert = server.cert
https_key = server.key
https_chain = ""
port = 8080
ssl_type = v23
host = 0.0.0.0
enable_https = 0' > $OMV_SABNZBD1_DATA_CONFIG
    chown $OMV_SABNZBD_USER:$OMV_SABNZBD_GROUP $OMV_SABNZBD1_DATA_CONFIG
    chmod 775 $OMV_SABNZBD1_DATA_CONFIG
else
    sed -i '0,/^port.*/{s/^port.*/port = 8080/}' $OMV_SABNZBD1_DATA_CONFIG
    sed -i '0,/^https_port.*/{s/^https_port.*/https_port = 9080/}' $OMV_SABNZBD1_DATA_CONFIG
fi

if [ "${newinstance}" = "1" ]; then
    if  [ ! -f /etc/init.d/sabnzbd2 ]; then
        cat > /etc/init.d/sabnzbd2 <<'EOF'
#!/bin/sh
#
### BEGIN INIT INFO
# Provides:          sabnzbd2
# Required-Start:    $local_fs $network $remote_fs
# Required-Stop:     $local_fs $network $remote_fs
# Should-Start:      NetworkManager
# Should-Stop:       NetworkManager
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: SABnzbd binary newsgrabber
### END INIT INFO

############### EDIT ME ##################
# Path to store PID file
PID_FILE="/var/run/sabnzbd/sabnzbd2.pid"
PID_PATH=`dirname $PID_FILE`

# script name
NAME="sabnzbd2"
DESC="SABnzbd2"

# startup args
DAEMON_OPTS="--daemon --pidfile $PID_FILE"
EXTRA_OPTS=""
RUN_AS="sabnzbd"
DAEMON="SABnzbd.py"
APP_PATH="/opt/SABnzbd"
CONFIG="/var/opt/sabnzbd2/sabnzbd.ini"
HOST="0.0.0.0"

if [ -f "$CONFIG" ]; then
    PORT=`grep -m 1 ^port $CONFIG | cut -d ' ' -f 3`
    HTTPS=`grep -m 1 ^enable_https "${CONFIG}" | cut -d ' ' -f 3`
    if [ "$HTTPS" = "1" ]; then
        HTTPSPORT=`grep ^https_port $CONFIG | cut -d ' ' -f 3`
        DAEMON_OPTS="--daemon --pidfile $PID_FILE --https $HTTPSPORT"
    fi
else
    PORT="8090"
fi
############### END EDIT ME ##################

test -x $APP_PATH/$DAEMON || exit 0

[ -r /etc/default/locale ] && {
	. /etc/default/locale;
	[ -n "$LANG" ] && export LANG;
}


# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
. /lib/lsb/init-functions

set -e

if [ ! -d $PID_PATH ]; then
    mkdir -p $PID_PATH
	chown -R $RUN_AS:users $PID_PATH
fi

if [ ! -d /var/opt/sabnzbd ]; then
    mkdir -p /var/opt/sabnzbd
	chown -R $RUN_AS:users /var/opt/sabnzbd
fi

if [ -e $PID_FILE ]; then
    PID=`cat $PID_FILE`
    if ! kill -0 $PID > /dev/null 2>&1; then
        rm $PID_FILE
    fi
fi

load_settings()
{
    HOST="0.0.0.0"
	#Set SABnzbd address here.
    EXTRAOPTS=""
    OPTIONS="$DAEMON_OPTS"
    OPTIONS="$OPTIONS --config-file $CONFIG $EXTRA_OPTS"
    SERVER="$HOST"
    SERVER="$SERVER:$PORT"
    OPTIONS="$OPTIONS --server $SERVER"
    OPTIONS="$OPTIONS $EXTRAOPTS"
}

is_running()
{
    if [ ! -e $PID_FILE ]; then
        return 1
    fi
    return 0
}

case "$1" in
    start)
        load_settings;
        echo "Starting $DESC"
        cd $APP_PATH
        eval start-stop-daemon -d $APP_PATH -c $RUN_AS --start --exec $DAEMON -- $OPTIONS
        ;;

    stop)
        if is_running; then
            echo "Stopping $DESC"
            start-stop-daemon --stop --pidfile $PID_FILE --retry 30
        fi
        ;;

    restart|force-reload)
        if is_running; then
            start-stop-daemon --stop --pidfile $PID_FILE --retry 30
        fi
        echo "Restarting $DESC"
        load_settings;
        cd $APP_PATH
        start-stop-daemon -d $APP_PATH -c $RUN_AS --start --exec $DAEMON -- $OPTIONS
        ;;

    status)
        status_of_proc -p $PID_FILE "$DAEMON" "$NAME"
        ;;

    *)
        N=/etc/init.d/$NAME
        echo "Usage: $N {start|stop|restart|status|force-reload}" >&2
        exit 1
        ;;
esac

exit 0

EOF
        chmod +x /etc/init.d/sabnzbd2
        insserv -d sabnzbd2
    fi

    if [ "${newinstenable}" = "1" ]; then
        if [ ! -d $OMV_SABNZBD2_DATA_PATH ]; then
            mkdir -p $OMV_SABNZBD2_DATA_PATH
            chown $OMV_SABNZBD_USER:$OMV_SABNZBD_GROUP $OMV_SABNZBD2_DATA_PATH
        fi

        if [ ! -f $OMV_SABNZBD2_DATA_CONFIG ]; then
            echo '__version__ = 19
[misc]
https_port = 9090
https_cert = server.cert
https_key = server.key
https_chain = ""
port = 8090
ssl_type = v23
host = 0.0.0.0
enable_https = 0' > $OMV_SABNZBD2_DATA_CONFIG
            chown $OMV_SABNZBD_USER:$OMV_SABNZBD_GROUP $OMV_SABNZBD2_DATA_CONFIG
            chmod 775 $OMV_SABNZBD2_DATA_CONFIG
        else
            sed -i '0,/^port.*/{s/^port.*/port = 8090/}' $OMV_SABNZBD2_DATA_CONFIG
            sed -i '0,/^https_port.*/{s/^https_port.*/https_port = 9090/}' $OMV_SABNZBD2_DATA_CONFIG
        fi
    fi
else
    if  [ -f "/etc/init.d/sabnzbd2" ]; then
        update-rc.d sabnzbd2 disable > /dev/null 2>&1
        rm /etc/init.d/sabnzbd2 > /dev/null 2>&1
    fi

    if [ -f "/var/run/sabnzbd/sabnzbd2.pid" ]; then
        PID=$(cat /var/run/sabnzbd/sabnzbd2.pid);
        kill -0 $PID 2>/dev/null;

        if [ $? -eq 0 ]; then
            kill -9 $PID;
            rm /var/run/sabnzbd/sabnzbd2.pid > /dev/null 2>&1
        fi
    fi

    if [ -d $OMV_SABNZBD2_DATA_PATH ]; then
        rm -Rf $OMV_SABNZBD2_DATA_PATH
        rm /etc/init.d/sabnzbd2
    fi
fi

if [ "${ssl}" = "1" ]; then
    if [ -f $OMV_SABNZBD1_DATA_CONFIG ]; then
        sed -i '0,/^enable_https.*/{s/^enable_https.*/enable_https = 1/}' $OMV_SABNZBD1_DATA_CONFIG
    fi

    if [ -f $OMV_SABNZBD2_DATA_CONFIG ]; then
        sed -i '0,/^enable_https.*/{s/^enable_https.*/enable_https = 1/}' $OMV_SABNZBD2_DATA_CONFIG
    fi
else
    if [ -f $OMV_SABNZBD1_DATA_CONFIG ]; then
        sed -i '0,/^enable_https.*/{s/^enable_https.*/enable_https = 0/}' $OMV_SABNZBD1_DATA_CONFIG
    fi

    if [ -f $OMV_SABNZBD2_DATA_CONFIG ]; then
        sed -i '0,/^enable_https.*/{s/^enable_https.*/enable_https = 0/}' $OMV_SABNZBD2_DATA_CONFIG
    fi
fi

if [ "${ppass}" = "1" ]; then
    IP=$(ifconfig|sed -n "/inet addr:.*255.255.255.*/{s/.*inet addr://; s/ .*//; p}")
    cat <<EOF > /etc/nginx/openmediavault-webgui.d/sab.conf
location /sabnzbd {
        proxy_pass        http://localhost:8080/sabnzbd;
        proxy_set_header  Host $IP;
        proxy_redirect    default;
}

EOF
    #if [ -f $OMV_SABNZBD1_DATA_CONFIG ]; then
    #    sed -i 's/^web_root.*/web_root = "\/sabnzbd"/' $OMV_SABNZBD1_DATA_CONFIG
    #fi

    if [ "${newinstance}" = "1" ]; then
        #if [ -f $OMV_SABNZBD2_DATA_CONFIG ]; then
        #    sed -i 's/^web_root.*/web_root = "\/sabnzbd2"/' $OMV_SABNZBD2_DATA_CONFIG
        #fi
        IP=$(ifconfig|sed -n "/inet addr:.*255.255.255.*/{s/.*inet addr://; s/ .*//; p}")
        cat <<EOF >> /etc/nginx/openmediavault-webgui.d/sab.conf
location /sabnzbd2 {
        proxy_pass        http://localhost:8090/sabnzbd;
        proxy_set_header  Host $IP;
        proxy_redirect    default;
}

EOF
    fi
    nginx -s reload
else
    if [ -f "/etc/nginx/openmediavault-webgui.d/sab.conf" ]; then
        rm /etc/nginx/openmediavault-webgui.d/sab.conf > /dev/null 2>&1
        nginx -s reload > /dev/null 2>&1
    fi
    #if [ -f $OMV_SABNZBD1_DATA_CONFIG ]; then
    #    sed -i 's/^web_root.*/web_root = ""/' $OMV_SABNZBD1_DATA_CONFIG
    #fi

    #if [ -f $OMV_SABNZBD2_DATA_CONFIG ]; then
    #    sed -i 's/^web_root.*/web_root = ""/' $OMV_SABNZBD2_DATA_CONFIG
    #fi
fi

if [ "${newinstance}" = "1" ] && [ "${newinstenable}" = "1" ]; then
    update-rc.d sabnzbd2 enable > /dev/null 2>&1
    /etc/init.d/sabnzbd2 start > /dev/null 2>&1
else
    if [ -f "/etc/init.d/sabnzbd2" ]; then
        update-rc.d sabnzbd2 disable > /dev/null 2>&1
    fi

    if [ -f "/var/run/sabnzbd/sabnzbd2.pid" ]; then
        PID=$(cat /var/run/sabnzbd/sabnzbd2.pid);
        kill -0 $PID 2>/dev/null;

        if [ $? -eq 0 ]; then
            kill -9 $PID;
            rm /var/run/sabnzbd/sabnzbd2.pid > /dev/null 2>&1
        fi
    fi
fi

if [ -f "$CONFIG" ]; then
    PORT=`grep -m 1 ^port $CONFIG | cut -d ' ' -f 3`
    HTTPS=`grep -m 1 ^enable_https "${CONFIG}" | cut -d ' ' -f 3`
    if [ "$HTTPS" = "1" ]; then
        HTTPSPORT=`grep ^https_port $CONFIG | cut -d ' ' -f 3`
        DAEMON_OPTS="--daemon --pidfile $PID_FILE --https $HTTPSPORT"
    fi
else
    PORT="8080"
fi

xmlstarlet ed -L -u "//services/sabnzbd/port" -v $PORT -n $OMV_CONFIG_FILE
}

case "$2" in
  update)
    update
    ;;
  getsettings)
    getsettings
    ;;
  setsettings)
    setsettings
    ;;
  *)
    exit 0
esac

exit 0
